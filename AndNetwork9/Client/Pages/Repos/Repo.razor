@page "/repo/{EntityId:int}"

@if (Entity is null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Загрузка...</span>
        </div>
    </div>
}
else
{
    <BaseBodyWithAside>
        <Title>
            <input @bind="Entity.Name" type="text">
        </Title>
        <Main>
            @if (Entity.WriteRule.HasAccess(AuthStateProvider.CurrentMember)
                 && (Entity.Description?.AuthorId ?? Entity.CreatorId) == AuthStateProvider.CurrentMember.Id)
            {
                <MarkdownEditor
                    GetterFunc="() => EditedText"
                    ResetFunc="() => EditedText = Entity.Description?.Text"
                    SaveFunc="async _ => await UpdateDescription()"
                    SetterFunc="x => EditedText = x">
                </MarkdownEditor>
            }
            else
            {
                @Description
            }
        </Main>
        <Aside>
            <b>Тип: </b>
            @Entity.Type.GetString()
            <br/>
            @if (Entity.Creator is not null)
            {
                <b>Автор: </b>
                <a href="@Entity.Creator.GetLink()">@Entity.Creator.ToString()</a>
                <br/>
            }
            <b>Версий: </b>
            @Entity.Nodes.Count
            <br/>
            <div class="d-grid gap-2">
                @if (Entity.Nodes.Any(x => x.Prototype == 0))
                {
                    <a class="btn btn-success" href="@Entity.Nodes.Where(x => x.Prototype == 0).MaxBy(x => x).GetLink()" target="_blank" type="button">Скачать последнюю стабильную версию</a>
                }
                @if (Entity.Nodes.Any(x => x.Prototype != 0))
                {
                    <a class="btn btn-primary" href="@Entity.Nodes.Where(x => x.Prototype != 0).MaxBy(x => x).GetLink()" target="_blank" type="button">Скачать последний прототип</a>
                }
            </div>
            <br/>
            <b>Выбрать версию для скачивания: </b>
            <div class="d-grid gap-2">
                <select @bind="SelectedNodeIndex" class="form-select">
                    @foreach (RepoNode node in Entity.Nodes.OrderByDescending(x => x))
                    {
                        <option value="@Entity.Nodes.IndexOf(node)">@node.Tag: @node.Description</option>
                    }
                </select>
                @if (SelectedNode is not null)
                {
                    <a class="btn btn-secondary" href="@SelectedNode.GetLink()" target="_blank" type="button">Скачать версию @SelectedNode.Tag</a>
                }
                @if (Entity.WriteRule.HasAccess(AuthStateProvider.CurrentMember))
                {
                    <RepoNodeEditor Repo="Entity" RepoUpdated="_ => NodeLoaded()"/>
                    <button class="btn btn-warning" data-bs-target="#loader" data-bs-toggle="modal">Загрузить новую версию</button>
                }
                @if (Entity.CreatorId == AuthStateProvider.CurrentMember.Id)
                {
                    <div class="d-grid gap-2 mt-3">
                        @if (Entity.ReadRule is not null)
                        {
                            <AccessRuleEditor Id="readRuleEdiorId" Model="Entity.ReadRule" RuleUpdated="UpdateReadRule"/>
                            <button class="btn btn-info" data-bs-target="#readRuleEdiorId" data-bs-toggle="modal" type="button">Изменить права чтения</button>
                        }
                        @if (Entity.WriteRule is not null)
                        {
                            <AccessRuleEditor Id="writeRuleEdiorId" Model="Entity.WriteRule" RuleUpdated="UpdateWriteRule"/>
                            <button class="btn btn-info" data-bs-target="#writeRuleEdiorId" data-bs-toggle="modal" type="button">Изменить права записи</button>
                        }
                    </div>
                }
            </div>

        </Aside>
    </BaseBodyWithAside>
}