version: '3.4'

services:
  and9.gateway.clan:
    container_name: And9.Gateway.Clan
    image: ${DOCKER_REGISTRY-}gateway-clan
    restart: "no"
    env_file: .env
    ports:
      - "5240:80"
    build:
      context: .
      dockerfile: src/And9.Gateway.Clan/Dockerfile

  and9.service.core:
    container_name: And9.Service.Core
    image: ${DOCKER_REGISTRY-}service-core
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Service.Core/Dockerfile

  and9.service.auth:
    container_name: And9.Service.Auth
    image: ${DOCKER_REGISTRY-}service-auth
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Service.Auth/Dockerfile

  and9.service.Award:
    container_name: And9.Service.Award
    image: ${DOCKER_REGISTRY-}service-award
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Service.Award/Dockerfile

  and9.service.election:
    container_name: And9.Service.Election
    image: ${DOCKER_REGISTRY-}service-election
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Service.Election/Dockerfile

  and9.integration.discord:
    container_name: And9.Integration.Discord
    image: ${DOCKER_REGISTRY-}integration-discord
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Integration.Discord/Dockerfile

  and9.integration.steam:
    container_name: And9.Integration.Steam
    image: ${DOCKER_REGISTRY-}integration-steam
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Integration.Steam/Dockerfile

  and9.integration.vk:
    container_name: And9.Integration.VK
    image: ${DOCKER_REGISTRY-}integration-vk
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: src/And9.Integration.VK/Dockerfile

  and9.infra.redis:
    container_name: And9.Infra.Redis
    image: redis:alpine
    restart: "no"
    volumes:
      - "./data/redis/:/usr/local/etc/redis/"

  and9.infra.database:
    container_name: And9.Infra.Database
    image: postgres:alpine
    restart: "no"
    env_file: .env
    volumes:
      - "./data/postgresql:/var/lib/postgresql/data"

  and9.infra.broker:
    container_name: And9.Infra.Broker
    image: rabbitmq:alpine
    restart: "no"
    env_file: .env
    ports:
      - "6379:6379"
    volumes:
      - "./data/rabbitmq/rabbitmq.conf:/var/lib/rabbitmq/rabbitmq.conf"


  and9.monitoring.prometheus:
    image: prom/prometheus
    container_name: And9.Monitoring.Prometheus
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090

  and9.monitoring.grafana:
    image: grafana/grafana
    container_name: And9.Monitoring.Grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - 3000:3000

  and9.monitoring.cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: And9.Monitoring.Cadvisor
    privileged: true
    command: 
      - '--housekeeping_interval=15s'
      - '--docker_only=true'
      - '--disable_metrics=disk'
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  and9.monitoring.node-exporter:
    image: prom/node-exporter:latest
    container_name: And9.Monitoring.NodeExporter
    ports:
    - 9100:9100