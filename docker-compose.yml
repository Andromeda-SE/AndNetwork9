version: '3.4'

services:
  and9.gateway.clan:
    container_name: And9.Gateway.Clan
    image: ${DOCKER_REGISTRY-}gateway-clan
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    ports:
      - "5240:80"
    build:
      context: .
      dockerfile: src/And9.Gateway.Clan/Dockerfile

  and9.service.core:
    container_name: And9.Service.Core
    image: ${DOCKER_REGISTRY-}service-core
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Service.Core/Dockerfile

  and9.service.auth:
    container_name: And9.Service.Auth
    image: ${DOCKER_REGISTRY-}service-auth
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Service.Auth/Dockerfile

  and9.service.award:
    container_name: And9.Service.Award
    image: ${DOCKER_REGISTRY-}service-award
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Service.Award/Dockerfile

  and9.service.election:
    container_name: And9.Service.Election
    image: ${DOCKER_REGISTRY-}service-election
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Service.Election/Dockerfile

  and9.integration.discord:
    container_name: And9.Integration.Discord
    image: ${DOCKER_REGISTRY-}integration-discord
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Integration.Discord/Dockerfile


  and9.integration.steam:
    container_name: And9.Integration.Steam
    image: ${DOCKER_REGISTRY-}integration-steam
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Integration.Steam/Dockerfile

  and9.integration.vk:
    container_name: And9.Integration.VK
    image: ${DOCKER_REGISTRY-}integration-vk
    restart: "no"
    env_file: .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: src/And9.Integration.VK/Dockerfile

  and9.infra.redis:
    container_name: And9.Infra.Redis
    image: redis:alpine
    restart: "no"
    volumes:
      - "./data/redis/:/usr/local/etc/redis/"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  and9.infra.database:
    container_name: And9.Infra.Database
    image: postgres:alpine
    restart: "no"
    env_file: .env
    volumes:
      - "./data/postgresql:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  and9.infra.broker:
    container_name: And9.Infra.Broker
    image: rabbitmq:alpine
    restart: "no"
    env_file: .env
    ports:
      - "6379:6379"
    volumes:
      - "./data/rabbitmq/rabbitmq.conf:/var/lib/rabbitmq/rabbitmq.conf"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  and9.monitoring.prometheus:
    image: prom/prometheus
    container_name: And9.Monitoring.Prometheus
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    healthcheck:
      test: wget --spider -S "http://localhost:9090/-/ready" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  and9.portainer:
    image: portainer/portainer-ce:alpine
    container_name: And9.Portainer
    privileged: true
    ports:
    - 9443:9443 
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /data/portainer:/data
    healthcheck:
      test: wget --spider -S --no-check-certificate "https://localhost:9443/api/status" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
  
  and9.monitoring.grafana:
    image: grafana/grafana:main
    container_name: And9.Monitoring.Grafana
    ports:
    - 3000:3000 
    healthcheck:
      test: wget --spider -S --no-check-certificate "http://localhost:3000/api/health" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5