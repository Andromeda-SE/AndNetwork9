version: '3'

services:
  andnetwork9discord:
    container_name: AndNetwork9.Discord
    image: ${DOCKER_REGISTRY-}andnetwork9discord
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: AndNetwork9/Discord/Dockerfile
    depends_on: 
      - database
      - broker

  andnetwork9server:
    container_name: AndNetwork9.Server
    image: ${DOCKER_REGISTRY-}andnetwork9server
    restart: "no"
    env_file: .env
    ports:
      - "5260:80"
    build:
      context: .
      dockerfile: AndNetwork9/Server/Dockerfile
    depends_on: 
      - database
      - broker

  andnetwork9storage:
    container_name: AndNetwork9.Storage
    image: ${DOCKER_REGISTRY-}andnetwork9storage
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: AndNetwork9/Storage/Dockerfile
    depends_on: 
      - database
      - broker
    volumes:
      - "./data/repos:/var/lib/AndNetwork9/data"

  andnetwork9elections:
    container_name: AndNetwork9.Elections
    image: ${DOCKER_REGISTRY-}andnetwork9elections
    restart: "no"
    env_file: .env
    build:
      context: .
      dockerfile: AndNetwork9/Elections/Dockerfile
    depends_on: 
      - database
      - broker

  database:
    container_name: AndNetwork9.Database
    image: postgres:alpine
    restart: "no"
    env_file: .env
    volumes:
      - "./data/postgresql:/var/lib/postgresql/data"

  broker:
    container_name: AndNetwork9.Broker
    image: rabbitmq:alpine
    restart: "no"
    env_file: .env
    volumes:
      - "./data/rabbitmq/rabbitmq.conf:/var/lib/rabbitmq/rabbitmq.conf"

  prometheus:
    image: prom/prometheus
    container_name: AndNetwork9.Monitoring.Prometheus
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: AndNetwork9.Monitoring.Grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - 3000:3000

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: AndNetwork9.Monitoring.Cadvisor
    privileged: true
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter:latest
    container_name: AndNetwork9.Monitoring.NodeExporter
    ports:
    - 9100:9100